CSS - Cascading Style Sheets
  domain specific language for styling visual content

CSS file contains rules
h1 {                  //selector
  font-size: 200%;    //declaration block
  font-weight: bold;
}

WHERE TO PUT CSS - 3 places
<head>
  <link rel = "stylesheet" href="style.css"> //1: separate file in same directory
                                             // (usually the best option)

  <style>              //2: in style block in head (not recommended)
    h1 {font-size:200%}
  </style>
</head>
<body>
  <h1 style = "color:red;"> Hello </h1> //3: around contents (not recommended)
</body>

ONE CSS FILE, MANY HTML FILES
best practice, all HTML files point to same CSS file
(also good for changing the theme across the site)

CSS CLASSES - category you can put elements into
(think Venn diagram)

<h1 class="special"> Fancy Header </h1> //html
.special {                  //css
  color: blue;
}


IDs
used for unique items (identifier can be used once per page)
<img id="site_logo" src = "logo.png"> //HTML
#site_logo { //CSS
  border = 2px solid black;
}

Linking to IDs
used to link to a part of a page
<a href = "materials.html#examples"> look at examples </a>

Selectors
query for the items that match a criteria

"primitive" selectors
.special //select ALL class="special" element
#site_logo //selects ONE id="site_logo" element
img //select ALL <img> elements
* //select ALL elements
a.outgoing  //<a> element with outgoing class

h1, a, .important {   //ORs multiple selectors together
  font-style italic;
}

child selector
.topnav > * {...} //immediate children of topnav

descendant selector
main a {...} //ALL <a> elements descended from main

pseudoclasses
most common on links
:not  :first  :checked  ...
a:link  a:active  //unvisited links
a:hover   a:focus   //about to visit
a:visited   //visited

Combining Selectors arbitrarily
.a > .b > .c  //children of
a.outgoing:visited
footer > *
